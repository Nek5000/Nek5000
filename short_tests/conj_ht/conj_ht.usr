c-----------------------------------------------------------------------
c   
c   This is a small 2D example of conjugate heat transfer in Nek5000.
c   
c   The domain consists of two plates of finite thickness (h=0.5) 
c   with plane Poiseiulle flow moving between the plates from left 
c   to right (x=0 to 8).
c   
c   The gap height is 1.0 (y=0 to 1).
c   
c   The flow inlet temperature is T=0 and the plates are heated
c   with volumetric heat source, qvol = 1.
c
c   Insulated boundary conditions are applied on the solid
c   surfaces that are not interior to the computational domain,
c   so heat leaves only through advection at the flow outlet.
c
c-----------------------------------------------------------------------
      subroutine uservp (ix,iy,iz,ieg)
      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'

      if (ifield.eq.1) then
         utrans  = param(1)
         udiff   = param(2)

      else
         utrans  = param(7)        ! thermal properties
         udiff   = param(8)

         if (ieg .gt. nelgv) then  ! properties in the solid
            udiff   = 0.1*param(8) ! conductivity
            utrans  = 1.0
         endif
      endif

      return
      end
c-----------------------------------------------------------------------
      subroutine userf  (ix,iy,iz,ieg)
      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'

      ffx = 0.0
      ffy = 0.0
      ffz = 0.0

      return
      end
c-----------------------------------------------------------------------
      subroutine userq  (ix,iy,iz,ieg)
      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'

      qvol = 0.0
      if (ieg.gt.nelgv) qvol = 1.0

      return
      end
c-----------------------------------------------------------------------
      subroutine userchk
      include 'SIZE'
      include 'TOTAL'

      common /scrns/ w1   (lx1,ly1,lz1,lelt)
     $              ,terr (lx1,ly1,lz1,lelt)

      nv = nx1*ny1*nz1*nelv
      nt = nx1*ny1*nz1*nelt

      if (mod(istep,10).eq.0) then
         call sub3(terr,t,t(1,1,1,1,2),nt)
         terrmax = glamax(terr,nt)

         tmax = glmax(t ,nt)
         smax = glmax(t(1,1,1,1,2),nt)
         umax = glmax(vx,nt)
         if (nid.eq.0) write(6,1) istep,time,smax,tmax,terrmax
   1     format(i9,1p4e12.5,' tmax')
      endif

      return
      end
c-----------------------------------------------------------------------
      subroutine userbc (ix,iy,iz,iside,ieg)
c     NOTE ::: This subroutine MAY NOT be called by every process

C     Set boundary conditions

      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'

      ux   = 4.0*y*(1. - y)
      uy   = 0.0
      uz   = 0.0

      temp = 0.0

      return
      end
c-----------------------------------------------------------------------
      subroutine useric (ix,iy,iz,ieg)

C     Set initial conditions

      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'

      ux   = 4.0*y*(1. - y)
      uy   = 0.0
      uz   = 0.0
      temp = 0.0

      return
      end
c-----------------------------------------------------------------------
      subroutine usrdat
      include 'SIZE'
      include 'TOTAL'

      return
      end
c-----------------------------------------------------------------------
      subroutine usrdat2
      include 'SIZE'
      include 'TOTAL'

      return
      end
c-----------------------------------------------------------------------
      subroutine usrdat3
      return
      end
c-----------------------------------------------------------------------

c-----------------------------------------------------------------------
c
c     This is the data set for the rotating lid problem of Escudier
c
c     Reynolds number determined by setting p2 in the .rea file to, e.g.,
c     -1492 or -1854.
c
c
c     See, e.g., Sotiropoulos & Ventikos, Int. J. Heat & Fluid Flow 19 (1998)
c
c-----------------------------------------------------------------------
      subroutine uservp (ix,iy,iz,eg)
      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'

      integer e,f,eg
c     e = gllel(eg)

      udiff =0.
      utrans=0.
      return
      end
c-----------------------------------------------------------------------
      subroutine userf  (ix,iy,iz,eg)
      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'

      integer e,f,eg
c     e = gllel(eg)


c     Note: this is an acceleration term, NOT a force!
c     Thus, ffx will subsequently be multiplied by rho(x,t).


      ffx = 0.0
      ffy = 0.0
      ffz = 0.0

      return
      end
c-----------------------------------------------------------------------
      subroutine userq  (ix,iy,iz,eg)
      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'

      integer e,f,eg
c     e = gllel(eg)

      qvol   = 0.0
      source = 0.0

      return
      end
c-----------------------------------------------------------------------
      subroutine userchk
      include 'SIZE'
      include 'TOTAL'

      n = lx1*ly1*lz1*lelt
      if (istep.eq.0) then
         ifxyo = .true.
         call outpost(vx,vy,vz,pr,t,'   ')
         ifxyo = .false.
      endif

      dd   = 0.2**2
      vmin = 1.e20

      do i=1,n              ! Find min vz near centerline
         x = xm1(i,1,1,1)
         y = ym1(i,1,1,1)
         rr = x*x + y*y
         if (rr.lt.dd) vmin = min(vmin,vz(i,1,1,1))
      enddo
      vmin = glmin(vmin,1)

      if (nid.eq.0) write(6,1) istep,time,vmin
    1 format(i9,1p2e14.6,' VMIN')

      return
      end
c-----------------------------------------------------------------------
      subroutine userbc (ix,iy,iz,iside,ieg)
c     NOTE ::: This subroutine MAY NOT be called by every process
      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'
   
      common /bcdata/ zstart   ! start of top layer of elements
      az = 0
      if (z.gt.zstart) az = ((z-zstart)/(2.-zstart))**5   ! polynomial ramp
      ux = -y*az
      uy =  x*az
      uz = 0.0
      temp=0.0

      return
      end
c-----------------------------------------------------------------------
      subroutine useric (ix,iy,iz,ieg)
      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'

      common /bcdata/ zstart   ! start of top layer of elements

      az = 0
      if (z.gt.zstart) az = ((z-zstart)/(2.-zstart))**5   ! polynomial ramp
      ux = -y*az
      uy =  x*az
      uz = 0.0
      temp=0

      return
      end
c-----------------------------------------------------------------------
      subroutine usrdat
      include 'SIZE'
      include 'TOTAL'

      n=nelv*8
      do i=1,n
         x=xc(i,1)
         y=yc(i,1)
         rr = x*x+y*y

         if (rr.gt.0.99) then  ! project onto unit circle to machine prec.
            r=sqrt(rr)
            xc(i,1) = x/r
            yc(i,1) = y/r
         endif

      enddo


      return
      end
c-----------------------------------------------------------------------
      subroutine usrdat2
      include 'SIZE'
      include 'TOTAL'

      common /bcdata/ zstart   ! start of top layer of elements

      param(66) = 4.   ! These give the std nek binary i/o and are 
      param(67) = 4.   ! good default values


      zstart = 0
      ieg = lglel(nelv)

      if (ieg.eq.nelgv) zstart = zm1(1,1,1,nelv) ! min z val in top layer

      zstart = glmax(zstart,1)



      return
      end
c-----------------------------------------------------------------------
      subroutine usrdat3
      include 'SIZE'
      include 'TOTAL'
c
      return
      end
c-----------------------------------------------------------------------

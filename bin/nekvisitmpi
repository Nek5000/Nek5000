#!/bin/ksh

# These options are VisIt options that are handled in the code.
# -dir <VisIt directory> -options <VisIt Options> -trace <VisIt trace file>
if [[ $# -lt 2 ]];then
   echo ""
   echo "Needed arguments: <project name> <number of tasks>"
   echo "Visit Optional arguments go after needed arguments>"
   echo "   -dir <VisIt directory> -options <VisIt Options> -trace <VisIt trace file>"
   echo ""
   exit
fi

# Set VISIT to the directory where a version of VisIt is installed.
# You can override this by just setting VISIT env variable.
#VISIT=${VISIT:=/path/to/visit/source/install}
if [ -z "${VISIT}" ] ; then
    VISIT=`which visit`
    ret_code=$?
    if [ $ret_code != 0 ]; then
        echo ""
        echo "Could not find VisIt executable."
        echo "Need to add 'visit' to your path or"
        echo "need to set VISIT env variable to VisIt directory."
        echo ""
        exit ${ret_code}
    fi

    # Determine VisIt architecture
    # Taken from installed top level visit script.
    osname=$(uname)
    if test "$osname" = "Linux"; then
        proc=$(uname -m)
        if test "$proc" = "x86_64"; then
            platform="linux-x86_64"
        elif test "$proc" = "ppc"; then
            platform="linux-ppc"
        elif test "$proc" = "ppc64"; then
            platform="linux-ppc64"
        else
            platform="linux-intel"
        fi
    elif test "$osname" = "Darwin"; then
        platform="darwin-x86_64"
    elif test "$osname" = "AIX"; then
        if test "$OBJECT_MODE" = "32"; then
            platform="ibm-aix-pwr"
        else
            platform="ibm-aix-pwr64"
        fi
    elif test "$osname" = "freebsd"; then
        version=$(uname -r)
        proc=$(uname -m)
        platform="freebsd-${version}-${proc}"
    else
        echo "$osname is not a supported platform."
        exit -1
    fi

    VISIT="$(dirname ${VISIT})"
    VISIT="${VISIT}/../current/${platform}"
else
    if [[ ! -d ${VISIT} ]] ; then
        echo ""
        echo "VISIT path set to '${VISIT}'."
        echo " But this is not a directory. Need to set VISIT variable to VisIt directory."
        echo ""
        exit
    fi
fi
echo ""
echo "VISIT path set to '${VISIT}'."
echo ""

export LD_LIBRARY_PATH=${VISIT}/lib:${LD_LIBRARY_PATH}
export VISITPLUGINDIR=${VISIT}/plugins
export VISIT_MESA_LIB=${VISIT}/lib/libOSMesa.so

# Debug Script
#echo "LD_LIBRARY_PATH=${LD_LIBRARY_PATH}"
#echo "VISITPLUGINDIR=${VISITPLUGINDIR}"
#echo "VISIT_MESA_LIB=${VISIT_MESA_LIB}"

echo $1        >  SESSION.NAME
echo `pwd`'/' >>  SESSION.NAME
rm -f ioinfo logfile
if [[ -f ${1}.log ]] ; then
   mv -f $1.log $1.log1
fi
if [[ -f ${1}.sch ]] ; then
   mv -f $1.sch $1.sch1
fi
mpiexec -np $2 ./nek5000 $*


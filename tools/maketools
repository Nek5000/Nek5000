#!/bin/bash

# maximum number of elements
#MAXNEL=100000

# binary path
#bin_nek_tools=`cd ../bin && pwd`

# Fortran compiler
#FC="gfortran"
#FFLAGS=""

# C compiler
#CC="gcc"
#CFLAGS=""

# linking flags
#LDFLAGS="-L$HOME/lib -lm"






























### don't touch this section ###############################

: ${FC:="gfortran"}
: ${CC:="gcc"}
: ${bin_nek_tools:=`cd ../bin && pwd`}
: ${MAXNEL:=100000}

if [ $# -eq 0 ]; then
   echo "Usage: maketools [clean|all|tool(s)]"
   exit 1
fi

if [ "$FC" == "" ]; then
  echo "FATAL ERROR: Specify your Fortran compiler in maketools!"
  exit 1
fi

if [ "$CC" == "" ]; then
  echo "FATAL ERROR: Specify your C compiler in maketools!"
  exit 1
fi

which `echo $FC | awk '{print $1}'` 1>/dev/null
if [ $? -ne 0 ]; then
  echo "FATAL ERROR: Cannot find $FC!"
  exit 1
fi

which `echo $CC | awk '{print $1}'` 1>/dev/null
if [ $? -ne 0 ]; then
  echo "FATAL ERROR: Cannot find $CC!"
  exit 1
fi

if [ ! -d $bin_nek_tools  ]; then
  echo "FATAL ERROR: install path $bin_nek_tools does not exist!"
  exit 1
fi

PPPO=""
case $FC in
  *pgf*)       R8="-r8"
               CPPF="-Mpreprocess"
               BIGMEM="-mcmodel=medium"
               ;;
  *gfortran*)  R8="-fdefault-real-8"
               CPPF="-cpp"
               BIGMEM="-mcmodel=medium"
               ;;
  *ifort*)     R8="-r8"
               CPPF="-fpp"
               BIGMEM="-mcmodel=medium -shared-intel"
               ;;
  *xlf*)       R8="-qrealsize=8"
               CPPF="-qsuffix=cpp=f"
               BIGMEM="-q64"
               PPPO="-WF,"
               ;;
  *)           echo "ERROR: Cannot find a supported compiler!"
               exit 1
               ;;
esac

# Check if the compiler adds an underscore to external functions
cat > test_underscore.f << _ACEOF
      subroutine underscore_test
        call byte_write
      end
_ACEOF

$FC -c test_underscore.f 2>&1 >/dev/null 
nm test_underscore.o | grep byte_write_ 1>/dev/null
if [ $? -eq 0 ]; then 
  US="-DUNDERSCORE"
fi
\rm test_underscore.* 2>/dev/null

if [[ $OSTYPE == darwin* ]]; then
  BIGMEM="" 
fi

FFLAGS+=" -DMAXNEL=$MAXNEL"
FFLAGS=`echo $FFLAGS | sed -e "s/-D/$PPPO-D/g"`

export FC=`which $FC`
export NEK_FFLAGS="$FFLAGS"
export FFLAGS_
export CC=`which $CC`
export NEK_CFLAGS="$CFLAGS"
export bin_nek_tools
export US
export R8
export CPPF
export BIGMEM
export LDFLAGS

LIST=`ls -Cd */ | sed 's:\/::g'`
MODULES=`echo $LIST`
export MODULES

if [ "$1" == "clean" ]; then
   make clean
else
   export DOALL=''
   if [ "$1" == "all" ]; then
      export DOALL=1
   fi
   if [ "$1" != "all" ]; then
      LIST=`echo $* | sed 's:\/::g'`
      MODULES=$LIST
   fi
   export MODULES
   make 
fi

